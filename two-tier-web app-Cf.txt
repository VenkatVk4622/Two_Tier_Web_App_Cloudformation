AWSTemplateFormatVersion: "2010-09-09"
Description: "Two-tier web application using AWS CloudFormation"

Parameters:
  KeyName:
    Type: String
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"
  InstanceType:
    Type: String
    Default: "t2.micro"
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: "EC2 instance type for the web server"
  DBUser:
    Type: String
    Description: "Database username"
  DBPassword:
    Type: String
    NoEcho: true
    Description: "Database password"
  DBName:
    Type: String
    Default: "WebAppDB"
    Description: "Name of the database"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "WebAppVPC"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: "Name"
          Value: "PublicSubnet"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "WebAppIGW"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "PublicRouteTable"

  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH and HTTP access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"

  WebServerInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref PublicSubnet
      ImageId: "ami-0c02fb55956c7d316" # Amazon Linux 2 AMI
      Tags:
        - Key: "Name"
          Value: "WebServer"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "Welcome to the two-tier web application!" > /var/www/html/index.html

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Subnets for RDS"
      SubnetIds:
        - !Ref PublicSubnet
      Tags:
        - Key: "Name"
          Value: "RDSSubnetGroup"

  DatabaseInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: 20
      DBInstanceClass: "db.t2.micro"
      Engine: "mysql"
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref SecurityGroup

Outputs:
  WebServerURL:
    Description: "URL of the web server"
    Value: !Sub "http://${WebServerInstance.PublicDnsName}"

  DatabaseEndpoint:
    Description: "Database endpoint"
    Value: !GetAtt DatabaseInstance.Endpoint.Address
